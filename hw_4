#Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). Выдать без повторений в порядке возрастания 
#все те числа, которые встречаются в обоих наборах. Пользователь вводит 2 числа. n — кол-во элементов первого множества. 
#m — кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.

n = int(input("Количество элементов первого мн-ва: "))
list_1 = []
for i in range (n): 
    list_1.append(input())
print (*list_1)

m = int(input("Количество элементов первого мн-ва: "))
list_2 = []
for i in range (m): 
    list_2.append(input())
print (*list_2)

list_new = (set(list_1)).intersection(set(list_2)) 
print(*sorted(list_new))




#Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, причём кусты высажены только по окружности. 
#Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
#Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло ai ягод.
#В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и нескольких собирающих модулей. 
#Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
#Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.


garden_beds = int(input('Количество кустов: ')) #количество кустов в окружности
berrys = input('Количество ягод на кустах: ').split(' ') #количество ягод на кустах

berrys_max = int(berrys[0]) + int(berrys[1]) + int(berrys[-1])

for i in range(garden_beds - 1): 
    n = int(berrys[i]) + int(berrys[i+1]) + int(berrys[i-1])
    if n > berrys_max:
        berrys_max = n
        i = i+1
    else:
        i = i+1

print (berrys_max)
